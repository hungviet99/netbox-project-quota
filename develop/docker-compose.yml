---
version: '3'
services:
  netbox:
    build:
      context: ../
      dockerfile: develop/Dockerfile
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --no-input &&
             python manage.py runserver 0.0.0.0:8000"
    ports:
      - '8000:8000'
    depends_on:
      - postgres
      - redis
      - redis-cache
    env_file:
      - ./env/netbox.env
    volumes: &volumes
      - ./configuration.py:/opt/netbox/netbox/netbox/configuration.py
      - ../netbox-project-quota:/source/netbox-project-quota
    tty: true
  worker:
    build:
      context: ../
      dockerfile: develop/Dockerfile
    command: sh -c "python manage.py rqworker --with-scheduler"
    depends_on:
      - netbox
    env_file:
      - ./env/netbox.env
    volumes: *volumes
    tty: true
  postgres:
    image: docker.io/postgres:15-alpine
    env_file: ./env/postgres.env
    volumes:
      - pgdata_netbox_plugins:/var/lib/postgresql/data
  redis:
    image: docker.io/redis:7-alpine
    command:
      - sh
      - -c # this is to evaluate the $REDIS_PASSWORD from the env
      - redis-server --appendonly yes --requirepass $$REDIS_PASSWORD ## $$ because of docker-compose
    env_file: ./env/redis.env
    volumes:
    - netbox-redis-data:/data
  redis-cache:
    image: redis:7-alpine
    command:
    - sh
    - -c # this is to evaluate the $REDIS_PASSWORD from the env
    - redis-server --requirepass $$REDIS_PASSWORD ## $$ because of docker-compose
    env_file: ./env/redis-cache.env
    volumes:
    - netbox-redis-cache-data:/data
volumes:
  pgdata_netbox_plugins:
    driver: local
  netbox-redis-data:
    driver: local
  netbox-redis-cache-data:
    driver: local